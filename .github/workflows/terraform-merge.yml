name: Terraform Workflow

on:
  push:
    branches:
      - main

permissions:
        id-token: write
        contents: read
        packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_DEFAULT_REGION: us-west-2

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS CLI and Assume Role
        run: |
          aws configure set region ${{ env.AWS_DEFAULT_REGION }}
          aws sts assume-role --role-arn arn:aws:iam::427071048654:role/github-actions-admin --role-session-name k8sdeploysession > assumed-role.json

          export AWS_ACCESS_KEY_ID=$(jq -r .Credentials.AccessKeyId assumed-role.json)
          export AWS_SECRET_ACCESS_KEY=$(jq -r .Credentials.SecretAccessKey assumed-role.json)
          export AWS_SESSION_TOKEN=$(jq -r .Credentials.SessionToken assumed-role.json)

          aws sts get-caller-identity
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.0

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Initialize Terraform
        run: terraform init
        working-directory: infrastructure/dev-env

      - name: Plan Terraform changes
        run: terraform plan -out=tfplan
        working-directory: infrastructure/dev-env

      - name: Apply Terraform changes
        run: terraform apply tfplan
        working-directory: infrastructure/dev-env
